openapi: 3.0.3
info:
  description: |
    API for App Nasoni di Roma. This API allows to get the position of
    fountains in the area of Rome, add or delete fountains or update
    status of the existing fountains.
  title: Nasoni di Roma
  version: 0.0.1
paths:
  /fountains:
    get:
      operationId: listFountains
      summary: get a list of available fountains
      description: |
        Get a list of the fountains with their position and status
      parameters:
        - name: latitude
          in: query
          required: False
          description: Latitude for finding/sorting nearby fountains
          schema:
            $ref: "#/components/schemas/Latitude"
        - name: longitude
          in: query
          required: False
          description: Longitude for finding/sorting nearby fountains
          schema:
            $ref: "#/components/schemas/Longitude"
        - name: range
          in: query
          required: false
          description: |
            distance within to locate fountains which. default: 300
          schema:
            type: number
            format: float
            example: 300
            minimum: 1
            maximum: 5000
      responses:
        "200":
          description: Fountains found in the area
          content: 
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#/components/schemas/Fountain"
    post:
      operationId: createFountain
      summary: add new fountain
      description : |
        Create and add a new fountain with its status and location. 
        The ID will be generated by the server, which the client will find 
        in the response. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Fountain"
      responses:
        "201":
          description: Fountain created
          content:
            application/json:
                schema:
                  $ref: "#/components/schemas/Fountain"
  /fountains/{id}:
    parameters: 
      - $ref: "#/components/parameters/FountainID"
    put:
      operationId: updateFountain
      summary: update fountain properties
      description: |
        Replace the fountain properties with the one specified in the request
      requestBody:
        content: 
          application/json:
              schema:
                $ref: "#/components/schemas/Fountain"
          application/xml: # optional, xml and/or json is fine
              schema:
                $ref: "#/components/schemas/Fountain" 
      responses:
        "200":
          description: |
            Fountain attributes have been replaced with new ones 
            specified in the request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fountain"
        "404":
          description: Fountain not found
    delete:
      operationId: deleteFountain
      summary: delete an existing fountain
      description: |
        Delete a fountain
      responses:
        "200": {description: Fountain deleted succesfully}
        "400": {description: Fountain not found}
              

components:
  schemas:
    Fountain:
      title: Fountain
      description: single fountain 
      type: object
      properties:
        id:
          description: unique identifier for a fountain
          type: integer
          example: 223
          readOnly: True
        status:
          description: |
            defines if the fountain is working if it's "active", "inactive"
            if it's not working.
          type: string
          enum: ["active", "inactive"]
          example: "active"
        latitude:
          description: latitude of the fountain in decimal degrees
          type: number
          format: float
          example: 34.56
          minimum: -90
          maximum: 90
        longitude:
          description: longitude of the fountain in decimal degrees
          type: number
          format: float
          example: 34.56
          minimum: -180
          maximum: 180
    Latitude:
      description: latitude of the fountain in decimal degrees
      type: number
      format: float
      example: 34.56
      minimum: -90
      maximum: 90
    Longitude:
      description: longitude of the fountain in decimal degrees
      type: number
      format: float
      example: 34.56
      minimum: -180
      maximum: 180
  parameters:
    FountainID:
      schema:
          type: integer 
          example: 1 
          readOnly: true
      name: id
      in: path
      required: true 
      description: Fountain ID
          
          